"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/modern-ahocorasick";
exports.ids = ["vendor-chunks/modern-ahocorasick"];
exports.modules = {

/***/ "(ssr)/./node_modules/modern-ahocorasick/dist/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/modern-ahocorasick/dist/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AhoCorasick)\n/* harmony export */ });\n// src/index.ts\nvar AhoCorasick = class {\n  constructor(keywords) {\n    const { failure, gotoFn, output } = this._buildTables(keywords);\n    this.gotoFn = gotoFn;\n    this.output = output;\n    this.failure = failure;\n  }\n  _buildTables(keywords) {\n    const gotoFn = {\n      0: {}\n    };\n    const output = {};\n    let state = 0;\n    for (const word of keywords) {\n      let curr = 0;\n      for (const l of word) {\n        if (gotoFn[curr] && l in gotoFn[curr]) {\n          curr = gotoFn[curr][l];\n        } else {\n          state++;\n          gotoFn[curr][l] = state;\n          gotoFn[state] = {};\n          curr = state;\n          output[state] = [];\n        }\n      }\n      output[curr].push(word);\n    }\n    const failure = {};\n    const xs = [];\n    for (const l in gotoFn[0]) {\n      const state2 = gotoFn[0][l];\n      failure[state2] = 0;\n      xs.push(state2);\n    }\n    while (xs.length > 0) {\n      const r = xs.shift();\n      if (r !== void 0) {\n        for (const l in gotoFn[r]) {\n          const s = gotoFn[r][l];\n          xs.push(s);\n          let state2 = failure[r];\n          while (state2 > 0 && !(l in gotoFn[state2])) {\n            state2 = failure[state2];\n          }\n          if (l in gotoFn[state2]) {\n            const fs = gotoFn[state2][l];\n            failure[s] = fs;\n            output[s] = [...output[s], ...output[fs]];\n          } else {\n            failure[s] = 0;\n          }\n        }\n      }\n    }\n    return {\n      gotoFn,\n      output,\n      failure\n    };\n  }\n  search(str) {\n    let state = 0;\n    const results = [];\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        const foundStrs = this.output[state];\n        results.push([i, foundStrs]);\n      }\n    }\n    return results;\n  }\n  match(str) {\n    let state = 0;\n    for (let i = 0; i < str.length; i++) {\n      const l = str[i];\n      while (state > 0 && !(l in this.gotoFn[state])) {\n        state = this.failure[state];\n      }\n      if (!(l in this.gotoFn[state])) {\n        continue;\n      }\n      state = this.gotoFn[state][l];\n      if (this.output[state].length > 0) {\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvbW9kZXJuLWFob2NvcmFzaWNrL2Rpc3QvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBLFlBQVksMEJBQTBCO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFVBQVU7QUFDVjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQixnQkFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBR0UiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xceHNwYW5nXFxEZXNrdG9wXFxOZXcgZm9sZGVyXFxERVZNYXRjaC1IYWNrYXRob24tMjAyNVxcbm9kZV9tb2R1bGVzXFxtb2Rlcm4tYWhvY29yYXNpY2tcXGRpc3RcXGluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9pbmRleC50c1xudmFyIEFob0NvcmFzaWNrID0gY2xhc3Mge1xuICBjb25zdHJ1Y3RvcihrZXl3b3Jkcykge1xuICAgIGNvbnN0IHsgZmFpbHVyZSwgZ290b0ZuLCBvdXRwdXQgfSA9IHRoaXMuX2J1aWxkVGFibGVzKGtleXdvcmRzKTtcbiAgICB0aGlzLmdvdG9GbiA9IGdvdG9GbjtcbiAgICB0aGlzLm91dHB1dCA9IG91dHB1dDtcbiAgICB0aGlzLmZhaWx1cmUgPSBmYWlsdXJlO1xuICB9XG4gIF9idWlsZFRhYmxlcyhrZXl3b3Jkcykge1xuICAgIGNvbnN0IGdvdG9GbiA9IHtcbiAgICAgIDA6IHt9XG4gICAgfTtcbiAgICBjb25zdCBvdXRwdXQgPSB7fTtcbiAgICBsZXQgc3RhdGUgPSAwO1xuICAgIGZvciAoY29uc3Qgd29yZCBvZiBrZXl3b3Jkcykge1xuICAgICAgbGV0IGN1cnIgPSAwO1xuICAgICAgZm9yIChjb25zdCBsIG9mIHdvcmQpIHtcbiAgICAgICAgaWYgKGdvdG9GbltjdXJyXSAmJiBsIGluIGdvdG9GbltjdXJyXSkge1xuICAgICAgICAgIGN1cnIgPSBnb3RvRm5bY3Vycl1bbF07XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgc3RhdGUrKztcbiAgICAgICAgICBnb3RvRm5bY3Vycl1bbF0gPSBzdGF0ZTtcbiAgICAgICAgICBnb3RvRm5bc3RhdGVdID0ge307XG4gICAgICAgICAgY3VyciA9IHN0YXRlO1xuICAgICAgICAgIG91dHB1dFtzdGF0ZV0gPSBbXTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgb3V0cHV0W2N1cnJdLnB1c2god29yZCk7XG4gICAgfVxuICAgIGNvbnN0IGZhaWx1cmUgPSB7fTtcbiAgICBjb25zdCB4cyA9IFtdO1xuICAgIGZvciAoY29uc3QgbCBpbiBnb3RvRm5bMF0pIHtcbiAgICAgIGNvbnN0IHN0YXRlMiA9IGdvdG9GblswXVtsXTtcbiAgICAgIGZhaWx1cmVbc3RhdGUyXSA9IDA7XG4gICAgICB4cy5wdXNoKHN0YXRlMik7XG4gICAgfVxuICAgIHdoaWxlICh4cy5sZW5ndGggPiAwKSB7XG4gICAgICBjb25zdCByID0geHMuc2hpZnQoKTtcbiAgICAgIGlmIChyICE9PSB2b2lkIDApIHtcbiAgICAgICAgZm9yIChjb25zdCBsIGluIGdvdG9GbltyXSkge1xuICAgICAgICAgIGNvbnN0IHMgPSBnb3RvRm5bcl1bbF07XG4gICAgICAgICAgeHMucHVzaChzKTtcbiAgICAgICAgICBsZXQgc3RhdGUyID0gZmFpbHVyZVtyXTtcbiAgICAgICAgICB3aGlsZSAoc3RhdGUyID4gMCAmJiAhKGwgaW4gZ290b0ZuW3N0YXRlMl0pKSB7XG4gICAgICAgICAgICBzdGF0ZTIgPSBmYWlsdXJlW3N0YXRlMl07XG4gICAgICAgICAgfVxuICAgICAgICAgIGlmIChsIGluIGdvdG9GbltzdGF0ZTJdKSB7XG4gICAgICAgICAgICBjb25zdCBmcyA9IGdvdG9GbltzdGF0ZTJdW2xdO1xuICAgICAgICAgICAgZmFpbHVyZVtzXSA9IGZzO1xuICAgICAgICAgICAgb3V0cHV0W3NdID0gWy4uLm91dHB1dFtzXSwgLi4ub3V0cHV0W2ZzXV07XG4gICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGZhaWx1cmVbc10gPSAwO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgZ290b0ZuLFxuICAgICAgb3V0cHV0LFxuICAgICAgZmFpbHVyZVxuICAgIH07XG4gIH1cbiAgc2VhcmNoKHN0cikge1xuICAgIGxldCBzdGF0ZSA9IDA7XG4gICAgY29uc3QgcmVzdWx0cyA9IFtdO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgc3RyLmxlbmd0aDsgaSsrKSB7XG4gICAgICBjb25zdCBsID0gc3RyW2ldO1xuICAgICAgd2hpbGUgKHN0YXRlID4gMCAmJiAhKGwgaW4gdGhpcy5nb3RvRm5bc3RhdGVdKSkge1xuICAgICAgICBzdGF0ZSA9IHRoaXMuZmFpbHVyZVtzdGF0ZV07XG4gICAgICB9XG4gICAgICBpZiAoIShsIGluIHRoaXMuZ290b0ZuW3N0YXRlXSkpIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBzdGF0ZSA9IHRoaXMuZ290b0ZuW3N0YXRlXVtsXTtcbiAgICAgIGlmICh0aGlzLm91dHB1dFtzdGF0ZV0ubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBmb3VuZFN0cnMgPSB0aGlzLm91dHB1dFtzdGF0ZV07XG4gICAgICAgIHJlc3VsdHMucHVzaChbaSwgZm91bmRTdHJzXSk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiByZXN1bHRzO1xuICB9XG4gIG1hdGNoKHN0cikge1xuICAgIGxldCBzdGF0ZSA9IDA7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzdHIubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNvbnN0IGwgPSBzdHJbaV07XG4gICAgICB3aGlsZSAoc3RhdGUgPiAwICYmICEobCBpbiB0aGlzLmdvdG9GbltzdGF0ZV0pKSB7XG4gICAgICAgIHN0YXRlID0gdGhpcy5mYWlsdXJlW3N0YXRlXTtcbiAgICAgIH1cbiAgICAgIGlmICghKGwgaW4gdGhpcy5nb3RvRm5bc3RhdGVdKSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cbiAgICAgIHN0YXRlID0gdGhpcy5nb3RvRm5bc3RhdGVdW2xdO1xuICAgICAgaWYgKHRoaXMub3V0cHV0W3N0YXRlXS5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn07XG5leHBvcnQge1xuICBBaG9Db3Jhc2ljayBhcyBkZWZhdWx0XG59O1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/modern-ahocorasick/dist/index.js\n");

/***/ })

};
;